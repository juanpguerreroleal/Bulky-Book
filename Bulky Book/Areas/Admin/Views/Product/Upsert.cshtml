@model Bulky_Book.Models.ViewModels.ProductViewModel

@{
    ViewData["Title"] = "Upsert";
}

<h1>Upsert</h1>

<h4>Product</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Upsert" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                @Html.HiddenFor(x => x.Product.Id)
                @Html.HiddenFor(x => x.Product.ImageUrl)
            </div>
            <div class="form-group">
                <label asp-for="Product.Author" class="control-label"></label>
                <input asp-for="Product.Author" class="form-control" />
                <span asp-validation-for="Product.Author" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Product.Title" class="control-label"></label>
                <input asp-for="Product.Title" class="form-control" />
                <span asp-validation-for="Product.Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Product.Description" class="control-label"></label>
                <input asp-for="Product.Description" class="form-control" />
                <span asp-validation-for="Product.Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Product.ISBN" class="control-label"></label>
                <input asp-for="Product.ISBN" class="form-control" />
                <span asp-validation-for="Product.ISBN" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Product.ListPrice" class="control-label"></label>
                <input asp-for="Product.ListPrice" class="form-control" />
                <span asp-validation-for="Product.ListPrice" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Product.Price" class="control-label"></label>
                <input asp-for="Product.Price" class="form-control" />
                <span asp-validation-for="Product.Price" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Product.Price50" class="control-label"></label>
                <input asp-for="Product.Price50" class="form-control" />
                <span asp-validation-for="Product.Price50" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Product.Price100" class="control-label"></label>
                <input asp-for="Product.Price100" class="form-control" />
                <span asp-validation-for="Product.Price100" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Product.CategoryId" class="control-label"></label>
                <select asp-for="Product.CategoryId" asp-items="Model.Categories"></select>
            </div>
            <div class="form-group">
                <label asp-for="Product.CoverTypeId" class="control-label"></label>
                <select asp-for="Product.CoverTypeId" asp-items="Model.CoverTypes"></select>
            </div>
            @if (!string.IsNullOrEmpty(Model.Product.ImageUrl))
            {
                <img style="width:200px;height:200px;" src="@Url.Content("~/" + Model.Product.ImageUrl)" />
            }
            else
            {
                <img style="width:200px;height:200px;" src="~/img/default_product.png" />
            }
            <div class="form-group">
                <input type="file" name="files" />
            </div>
            @if (Model.Product.Id == 0)
            {
                <partial name="_CreateAndBackToListButtons" />
            }
            else
            {
                <partial name="_EditAndBackToListButtons" model="Model.Product.Id" />
            }
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
